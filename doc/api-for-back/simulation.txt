from BioBless.biosys.ReactionSystem import ReactionSystem
__init__:
    reactions [[[reactant,...],[product,...],constant,...]
    species [species_name,initial]|species_name

        (constant is in system["deivces_parameters"]["..."])

simulate:
    parameter:
        initial [[species,initial],...]
        stop_time float
    return:
        [[time,{species:current,...}],...]

__add__:
    class+class->class

show_record:
    parameters:
        [species,...]

show_simulate=simulate+show_record

##########################################################################
class BioSystem():
    def __init__(dict, json=lizhi):
		lizhi_to_dict(lizhi)

		"""
			* get a list of node
			* name them
			* link to each other
		"""
        devices= Device(json[]).as_reaction_system(dict[])

	def lizhi_to_dict(list):
		return dict

    def simualte(record=[0,current]):
		[[time,{species:current,...}],...]  #species = str(0..len(nodes)) -> front
			
##########################################################################
class Device():
    def __init__(json)
	def as_reaction_system([Input,..], [OutPut])
		return ReactionSystem()

